{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactRouterDom = require(\"react-router-dom\");\nrequire(\"./QuestionEasy.css\");\nrequire(\"../../css/BottomNav.css\");\nvar _reactFontawesome = require(\"@fortawesome/react-fontawesome\");\nvar _freeSolidSvgIcons = require(\"@fortawesome/free-solid-svg-icons\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _jsxFileName = \"C:\\\\Users\\\\zezez\\\\Ambiente de Trabalho\\\\Group_8_Project_DTS_23_24\\\\frontend\\\\QuizQuest\\\\pages\\\\Sports\\\\QuestionEasy.js\";\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nfunction QuestionEasy() {\n  var _this = this;\n  var _useState = (0, _react.useState)(0),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    score = _useState2[0],\n    setScore = _useState2[1];\n  var _useState3 = (0, _react.useState)(null),\n    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n    question = _useState4[0],\n    setQuestion = _useState4[1];\n  var _useState5 = (0, _react.useState)(0),\n    _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n    questionCount = _useState6[0],\n    setQuestionCount = _useState6[1];\n  var _useState7 = (0, _react.useState)(false),\n    _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n    completed = _useState8[0],\n    setCompleted = _useState8[1];\n  var navigate = (0, _reactRouterDom.useNavigate)();\n  var _useParams = (0, _reactRouterDom.useParams)(),\n    level = _useParams.level;\n  var fetchRandomQuestion = function () {\n    var _ref = (0, _asyncToGenerator2.default)(function* () {\n      try {\n        var response = yield fetch(`http://127.0.0.1:8000/perguntas/aleatoria/?categoria=sports&nivel=easy`);\n        if (!response.ok) {\n          throw new Error('Problema ao buscar a pergunta');\n        }\n        var data = yield response.json();\n        setQuestion(data);\n      } catch (error) {\n        console.error(\"Erro ao buscar pergunta:\", error);\n        alert(\"Erro ao buscar a próxima pergunta.\");\n      }\n    });\n    return function fetchRandomQuestion() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  (0, _react.useEffect)(function () {\n    fetchRandomQuestion();\n  }, []);\n  var handleAnswerSelect = function handleAnswerSelect(resposta) {\n    if (resposta.correta) {\n      setScore(function (prevScore) {\n        return prevScore + 1;\n      });\n    }\n    setQuestionCount(function (prevCount) {\n      return prevCount + 1;\n    });\n    if (questionCount + 1 < 10) {\n      fetchRandomQuestion();\n    } else {\n      setCompleted(true);\n    }\n  };\n  var finishQuiz = function finishQuiz() {\n    if (score >= 5) {\n      navigate(`/sports-easy/${parseInt(level) + 1}`);\n    } else {\n      alert(\"Pontuação insuficiente para avançar. Tente novamente!\");\n      navigate(`/sports-easy/${level}`);\n    }\n  };\n  if (completed) {\n    return (0, _jsxRuntime.jsx)(\"div\", {\n      className: \"quiz-completion-container\",\n      children: (0, _jsxRuntime.jsxs)(\"div\", {\n        className: \"quiz-completion-card\",\n        children: [(0, _jsxRuntime.jsxs)(\"h1\", {\n          children: [\"N\\xEDvel \", level, \" Completo\"]\n        }), (0, _jsxRuntime.jsxs)(\"p\", {\n          className: \"quiz-completion-text\",\n          children: [\"Voc\\xEA acertou \", score, \" de 10 perguntas.\"]\n        }), (0, _jsxRuntime.jsx)(\"button\", {\n          onClick: finishQuiz,\n          className: \"finish-quiz-button\",\n          children: 'Para responder a mais q'\n        })]\n      })\n    });\n  }\n  return (0, _jsxRuntime.jsx)(\"div\", {\n    className: \"question-easy-container\",\n    children: question && (0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {\n      children: [(0, _jsxRuntime.jsxs)(\"div\", {\n        className: \"question-section\",\n        children: [(0, _jsxRuntime.jsx)(\"h1\", {\n          className: \"question-level\",\n          children: `Nível ${level}`\n        }), (0, _jsxRuntime.jsx)(\"div\", {\n          className: \"question-text\",\n          children: question.pergunta\n        }), question.imagem && (0, _jsxRuntime.jsx)(\"div\", {\n          className: \"question-image-wrapper\",\n          children: (0, _jsxRuntime.jsx)(\"img\", {\n            src: question.imagem,\n            alt: \"Imagem da pergunta\",\n            className: \"question-image\"\n          })\n        })]\n      }), (0, _jsxRuntime.jsx)(\"div\", {\n        className: \"answers-section\",\n        children: question.respostas.map(function (resposta, index) {\n          return (0, _jsxRuntime.jsx)(\"button\", {\n            onClick: function onClick() {\n              return handleAnswerSelect(resposta);\n            },\n            className: `answer ${resposta.correta ? \"correct\" : \"\"}`,\n            children: resposta.texto\n          }, index);\n        })\n      }), (0, _jsxRuntime.jsxs)(\"div\", {\n        className: \"question-progress\",\n        children: [questionCount + 1, \" de 10\"]\n      })]\n    })\n  });\n}\nvar _default = exports.default = QuestionEasy;","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_reactRouterDom","_reactFontawesome","_freeSolidSvgIcons","_jsxRuntime","_jsxFileName","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","QuestionEasy","_this","_useState","useState","_useState2","_slicedToArray2","score","setScore","_useState3","_useState4","question","setQuestion","_useState5","_useState6","questionCount","setQuestionCount","_useState7","_useState8","completed","setCompleted","navigate","useNavigate","_useParams","useParams","level","fetchRandomQuestion","_ref","_asyncToGenerator2","response","fetch","ok","Error","data","json","error","console","alert","apply","arguments","useEffect","handleAnswerSelect","resposta","correta","prevScore","prevCount","finishQuiz","parseInt","jsx","className","children","jsxs","onClick","Fragment","pergunta","imagem","src","alt","respostas","map","index","texto","_default","exports"],"sources":["C:/Users/zezez/Ambiente de Trabalho/Group_8_Project_DTS_23_24/frontend/QuizQuest/pages/Sports/QuestionEasy.js"],"sourcesContent":["// Em QuestionEasy.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport './QuestionEasy.css';\r\nimport '../../css/BottomNav.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser, faChartBar, faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction QuestionEasy() {\r\n  const [score, setScore] = useState(0);\r\n  const [question, setQuestion] = useState(null);\r\n  const [questionCount, setQuestionCount] = useState(0);\r\n  const [completed, setCompleted] = useState(false);\r\n  const navigate = useNavigate();\r\n  const { level } = useParams();\r\n\r\n  // Função para buscar uma pergunta aleatória\r\n  const fetchRandomQuestion = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://127.0.0.1:8000/perguntas/aleatoria/?categoria=sports&nivel=easy`\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error('Problema ao buscar a pergunta');\r\n      }\r\n      const data = await response.json();\r\n      setQuestion(data);\r\n    } catch (error) {\r\n      console.error(\"Erro ao buscar pergunta:\", error);\r\n      alert(\"Erro ao buscar a próxima pergunta.\");\r\n    }\r\n  };\r\n\r\n  // Efeito para buscar a primeira pergunta quando o componente é montado\r\n  useEffect(() => {\r\n    fetchRandomQuestion();\r\n  }, []);\r\n\r\n  // Função para tratar a seleção de resposta\r\n  const handleAnswerSelect = (resposta) => {\r\n    if (resposta.correta) {\r\n      setScore((prevScore) => prevScore + 1);\r\n    }\r\n    setQuestionCount((prevCount) => prevCount + 1);\r\n    if (questionCount + 1 < 10) {\r\n      fetchRandomQuestion();\r\n    } else {\r\n      setCompleted(true);\r\n    }\r\n  };\r\n\r\n  // Função para finalizar o quiz\r\n  const finishQuiz = () => {\r\n    if (score >= 5) { // Define o limiar de pontuação para avançar\r\n      navigate(`/sports-easy/${parseInt(level) + 1}`); // Avança para o próximo nível\r\n    } else {\r\n      alert(\"Pontuação insuficiente para avançar. Tente novamente!\");\r\n      navigate(`/sports-easy/${level}`); // Permite tentar o mesmo nível novamente\r\n    }\r\n  };\r\n\r\n  // Se o quiz estiver completo, mostrar a tela de conclusão\r\n  if (completed) {\r\n    return (\r\n      <div className=\"quiz-completion-container\">\r\n      <div className=\"quiz-completion-card\">\r\n        <h1>Nível {level} Completo</h1>\r\n        <p className=\"quiz-completion-text\">Você acertou {score} de 10 perguntas.</p>\r\n        <button onClick={finishQuiz} className=\"finish-quiz-button\">\r\n          {'Para responder a mais q'}\r\n        </button>\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n\r\n  // Se o quiz ainda não estiver completo, mostrar a pergunta atual\r\n  return (\r\n    <div className=\"question-easy-container\">\r\n      {question && (\r\n        <>\r\n          <div className=\"question-section\">\r\n            <h1 className=\"question-level\">{`Nível ${level}`}</h1>\r\n            <div className=\"question-text\">{question.pergunta}</div>\r\n            {question.imagem && (\r\n              <div className=\"question-image-wrapper\">\r\n                <img src={question.imagem} alt=\"Imagem da pergunta\" className=\"question-image\" />\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"answers-section\">\r\n            {question.respostas.map((resposta, index) => (\r\n              <button\r\n                key={index}\r\n                onClick={() => handleAnswerSelect(resposta)}\r\n                className={`answer ${resposta.correta ? \"correct\" : \"\"}`}\r\n              >\r\n                {resposta.texto}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <div className=\"question-progress\">\r\n             {questionCount + 1} de 10\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n            }\r\n\r\nexport default QuestionEasy;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}